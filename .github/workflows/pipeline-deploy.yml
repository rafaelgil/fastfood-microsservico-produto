name: Pipeline DEPLOY

#on:
#  push:
#    branches:
#      - main

env:
  AWS_REGION: ${{secrets.AWS_DEFAULT_REGION}}
  ECR_REPOSITORY: ${{secrets.ECR_REPOSITORY}}

jobs:
  terraform:
    name: "Criando reposit√≥rio ECR"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra-terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Test configuration of AWS CLI
        run: |
          aws --version
          aws configure list | grep region | awk '{print $2}'

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  build:
    needs: terraform
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Package
        run: ./gradlew clean build -x test

  deploy:
    needs: build
    name: "Deploy AWS"
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Package
        run: ./gradlew clean build -x test

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest